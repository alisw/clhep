# $Id: GNUmakefile.example.in,v 1.1.4.1 2005/03/18 22:26:42 garren Exp $
################################################################################ 
#
# makefile for HepPDT examples
#
# use: gmake [INCDIR= ] [CXX= ] [LIBNAME= ] all
#      gmake [INCDIR= ] [CXX= ] [LIBNAME= ] run
#
# Options:  
#      [CLHEP_BASE= ]
#      [HerwigLIB= ]
#      [IsajetLIB= ]
#      [PythiaLIB= ]
#
################################################################################ 
#
# The examList executables are saved here to make it easy to verify 
# particle numbering translations.
#
################################################################################ 

  CLHEP_BASE= @prefix@
  CXX = @CXX@
  LIBNAME = -L$(CLHEP_BASE)/lib -lCLHEP-@VERSION@
  HerwigLIB = $(HERWIG_DIR)/lib/libherwig.a $(HERWIG_DIR)/lib/libherdum.a $(HERWIG_DIR)/lib/timel.o
  IsajetLIB = $(ISAJET_DIR)/isajet.a
  PythiaLIB = $(LULIB)/pydata.o $(LULIB)/pyr.o $(LULIB)/liblund.a $(LULIB)/libpydum.a
  INCDIR    = -I$(CLHEP_BASE)/include
  LIBS = @AM_LDFLAGS@

################################################################################ 

ifndef DEBUG
    DEBUG = none
    DFLG =
    SFX =
else
    DFLG = $(DEBUG)
    SFX = _g
endif

ifdef HERWIG_DIR
    INCDIR += -I$(HERWIG_DIR)/src
endif

ifdef LUND_DIR
    INCDIR += -I$(LUND_DIR)/src/inc
endif

ifeq "$(CXX)" "g++"
    F77 = g77
    FFLAGS = $(DFLG) -fno-second-underscore $(INCDIR)
else
    F77 = f77
    FFLAGS = $(DFLG) $(INCDIR)
endif

################################################################################ 

AR=ar
ARFLG = -urs

CXXFLAGS = $(DFLG) @AM_CXXFLAGS@ @CXXFLAGS@ $(INCDIR)

SOURCE = $(wildcard *.cc)

include $(SOURCE:.cc=.d)

#------------------------------------------

all: examReadPDG examReadPythia examReadEvtGen examReadQQ examMyPDT examDMF

list: examListHerwig examListIsajet examListPythia

run:  run_test

examMyPDT: examMyPDT.o
	$(CXX) $(CXXFLAGS) -o $@ examMyPDT.o \
		$(LIBNAME) $(LIBS)

examDMF: ModeA$(SFX).o ModeB$(SFX).o examDMF.o 
	$(CXX) $(CXXFLAGS) -o $@ examDMF.o \
		 ModeA$(SFX).o ModeB$(SFX).o \
		 $(LIBNAME) $(LIBS)

examReadPDG: examReadPDG.o
	$(CXX) $(CXXFLAGS) -o $@ examReadPDG.o \
		$(LIBNAME) $(LIBS)

examReadPythia: examReadPythia.o
	$(CXX) $(CXXFLAGS) -o $@ examReadPythia.o \
		$(LIBNAME) $(LIBS)

examReadQQ: examReadQQ.o
	$(CXX) $(CXXFLAGS) -o $@ examReadQQ.o \
		$(LIBNAME) $(LIBS) 

examReadEvtGen: examReadEvtGen.o
	$(CXX) $(CXXFLAGS) -o $@ examReadEvtGen.o \
		$(LIBNAME) $(LIBS)

examListPythia: examListPythia.o examListPythiaInterface.o
	$(CXX) $(CXXFLAGS) -o $@ \
		examListPythia.o examListPythiaInterface.o \
		$(PythiaLIB) \
		$(LIBNAME) $(LIBS) -lg2c
	rm -f examListPythia.lpt

examListHerwig: examListHerwig.o examListHerwigInterface.o
	$(CXX) $(CXXFLAGS) -o $@ \
		examListHerwig.o examListHerwigInterface.o \
		$(HerwigLIB) \
		$(LIBNAME) $(LIBS) -lg2c

examListIsajet: examListIsajet.o examListIsajetInterface.o
	$(CXX) $(CXXFLAGS) -o $@ \
		examListIsajet.o examListIsajetInterface.o \
		$(IsajetLIB) \
		$(LIBNAME) $(LIBS) -lg2c

run_test: examReadPDG examReadPythia examReadEvtGen examMyPDT examReadQQ
	examReadPDG  > examReadPDG.log
	diff examReadPDG.out examReadPDG.out.save
	examReadPythia  > examReadPythia.log
	diff examReadPythia.out examReadPythia.out.save
	examReadEvtGen  > examReadEvtGen.log
	diff examReadEvtGen.out examReadEvtGen.out.save
	examMyPDT > examMyPDT.log
	diff examMyPDT.out examMyPDT.out.save
	examReadQQ  > examReadQQ.log
	diff examReadQQ.out examReadQQ.out.save

cleanobjs:
	rm -f *.o
	rm -f *.d

clean:
	rm -f *.o
	rm -f *.d
	rm -f examReadPDG examReadPythia examReadEvtGen 
	rm -f examMyPDT examDMF examReadQQ
	rm -f examListPythia examListHerwig examListIsajet
	rm -f *.out *.log
	rm -f fort.*


#------------------------------------------

.PHONY:  clean cleanobjs

.SUFFIXES :             # cancel implicit rules
.SUFFIXES : .o .cc .cpp .F .inc .h .hh .d

%.d: %.cc
	@$(SHELL) -ec '$(CXX) -M $(CXXFLAGS) $< | sed '\''s/$*.o/& $@/g'\'' > $@'

%.o: %.cc %.d
	$(CXX) $(CXXFLAGS) -c $<

%_g.o: %.cc %.d
	$(CXX) $(CXXFLAGS) -c -o $@ $<

%.d: %.cpp
	@$(SHELL) -ec '$(CXX) -M $(CXXFLAGS) $< | sed '\''s/$*.o/& $@/g'\'' > $@'

%.o: %.cpp %.d
	$(CXX) $(CXXFLAGS) -c $<

%_g.o: %.cpp %.d
	$(CXX) $(CXXFLAGS) -c -o $@ $<

%.o: %.F
	$(F77) $(FFLAGS) -c -o $@ $<
	
%_g.o: %.F
	$(F77) $(FFLAGS) -c -o $@ $<
 
