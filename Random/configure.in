# ======================================================================
# This is the Random configuration input file
# Process this file with autoconf to produce a configure script.
# ======================================================================


# ----------------------------------------------------------------------
# Identify the package and initialize the autotools:
# ----------------------------------------------------------------------

AC_PREREQ(2.57)
AC_INIT(CLHEP Random, 1.9.1.0, CLHEP@cern.ch, Random)
AC_CONFIG_AUX_DIR(autotools)
AC_CANONICAL_TARGET
AC_CONFIG_SRCDIR([src/DRand48Engine.cc])
AM_INIT_AUTOMAKE(1.6 foreign)
AC_PROG_LIBTOOL
AC_PROG_LN_S
AC_PROG_INSTALL


# ----------------------------------------------------------------------
# Identify the files that 'configure' is to produce:
# ----------------------------------------------------------------------

# Header containing #defines:
AM_CONFIG_HEADER([Random/defs.h])

# Makefiles:
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([Random/Makefile])
AC_CONFIG_FILES([src/Makefile])
AC_CONFIG_FILES([doc/Makefile])
AC_CONFIG_FILES([test/Makefile])
AC_CONFIG_FILES([Random-deps])
AC_CONFIG_FILES([Random/copy-header.pl], [chmod +x Random/copy-header.pl])

# Test driver program/script:
AC_CONFIG_FILES([test/testRandDists.sh], [chmod +x test/testRandDists.sh])
AC_CONFIG_FILES([test/testRandom.sh], [chmod +x test/testRandom.sh])
AC_CONFIG_FILES([test/gaussSmall.sh], [chmod +x test/gaussSmall.sh])
AC_CONFIG_FILES([test/gaussSpeed.sh], [chmod +x test/gaussSpeed.sh])
AC_CONFIG_FILES([test/ranRestoreTest.sh], [chmod +x test/ranRestoreTest.sh])

# ----------------------------------------------------------------------
# Capture post-install information:
# ----------------------------------------------------------------------

Random_CPPFLAGS="-I$includedir"
Random_LDFLAGS="-L$libdir"
Random_LIBS="-lCLHEP-$PACKAGE-$VERSION"

AC_SUBST(Random_CPPFLAGS)
AC_SUBST(Random_LIBS)
AC_SUBST(Random_LDFLAGS)

AC_SUBST(COPY_P)

TARGET=$target
AC_SUBST(TARGET)

# ----------------------------------------------------------------------
# Supply boilerplate for Random/defs.h source header:
# ----------------------------------------------------------------------

AH_TOP([#ifndef RANDOM_DEFS_H
#define RANDOM_DEFS_H])

## the undefs are converted by configure
AH_VERBATIM([PACKAGE],[/* Name of package */
#ifndef PACKAGE
#undef PACKAGE
#endif])
AH_VERBATIM([PACKAGE_BUGREPORT],[/* Define to the address where bug reports for this package should be sent. */
#ifndef PACKAGE_BUGREPORT
#undef PACKAGE_BUGREPORT
#endif])
AH_VERBATIM([PACKAGE_NAME],[/* Define to the full name of this package. */
#ifndef PACKAGE_NAME
#undef PACKAGE_NAME
#endif])
AH_VERBATIM([PACKAGE_STRING],[/* Define to the full name and version of this package. */
#ifndef PACKAGE_STRING
#undef PACKAGE_STRING
#endif])
AH_VERBATIM([PACKAGE_TARNAME],[/* Define to the one symbol short name of this package. */
#ifndef PACKAGE_TARNAME
#undef PACKAGE_TARNAME
#endif])
AH_VERBATIM([PACKAGE_VERSION],[/* Define to the version of this package. */
#ifndef PACKAGE_VERSION
#undef PACKAGE_VERSION
#endif])
AH_VERBATIM([VERSION],[/* Version number of package */
#ifndef VERSION
#undef VERSION
#endif])

## backwards compatibility
AH_VERBATIM([ENABLE_BACKWARDS_COMPATIBILITY],[/* backwards compatibility will be enabled ONLY in CLHEP 1.9 */
#ifndef ENABLE_BACKWARDS_COMPATIBILITY
#define ENABLE_BACKWARDS_COMPATIBILITY
#endif])

AH_BOTTOM([#endif  // RANDOM_DEFS_H])


# ----------------------------------------------------------------------
# Account for any user configuration options:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed programs:
# ----------------------------------------------------------------------

# Locate a C++ compiler:
AC_PROG_CXX(cl g++ c++ aCC CC cxx cc++ FCC KCC RCC xlC_r xlC gpp)

# Use it hereinafter:
AC_LANG(C++)

# Ensure we've found a preprocessor:
AC_REQUIRE_CPP

# worry about compiler flags
case "$target" in
*-*-win32*)
  case "$CXX" in
  cl)  CXXFLAGS="-DWIN32 -O -EHsc -GX -GR -MD";COPY_P="copy -p";;
  g++) CXXFLAGS="-O";COPY_P="copy -p";;
  c++) CXXFLAGS="-O";COPY_P="copy -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-cygwin*)
  case "$CXX" in
  cl)  CXXFLAGS="-DWIN32 -O -EHsc -GX -GR -MD";COPY_P="cp -p";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-solaris*)
  case "$CXX" in
  CC)  CXXFLAGS="-O -mt";COPY_P="cp -p";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-linux*)
  case "$CXX" in
  g++) CXXFLAGS="-O -ansi -pedantic -Wall -D_GNU_SOURCE";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall -D_GNU_SOURCE";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
alpha*-dec-osf*)
  case "$CXX" in
  cxx) CXXFLAGS="-O -std strict_ansi -timplicit_local";COPY_P="cp -p";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-hpux*)
  case "$CXX" in
  aCC) CXXFLAGS="-O -Aa +DAportable +Onolimit";COPY_P="cp -p";;
  CC)  CXXFLAGS="+O3 +DAportable +a1 -z -pta +Onolimit";COPY_P="cp -p";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
*-*-aix*)
  case "$CXX" in
  xlC) CXXFLAGS="-O3 -qtwolink -+";COPY_P="cp -p";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
*-*-irix*)
  case "$CXX" in
  CC)  CXXFLAGS="-O -OPT:Olimit=0 -pta";COPY_P="cp -p";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
powerpc-apple-darwin*)
  case "$CXX" in
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";COPY_P="cp -p";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
esac

# ----------------------------------------------------------------------
# Set system-dependent options:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed libraries:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed header files:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed typedefs, structures, and compiler characteristics:
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
# Check for needed library functions:
# ----------------------------------------------------------------------

AC_CHECK_FUNCS([drand48])

# ----------------------------------------------------------------------
# Finish up:
# ----------------------------------------------------------------------

AC_OUTPUT


# ======================================================================
