// $Id: StdRunInfoConvert.icc,v 1.1.1.1 2003/07/15 20:15:05 garren Exp $
// ----------------------------------------------------------------------
//
// StdRunInfoConvert.icc
// L. Garren
//
//  defines free functions to build StdRunInfo from HEPEVT, and vice-versa
//
// ----------------------------------------------------------------------

#include "CLHEP/StdHep/CBcm.hh"
#include "CLHEP/HepMC/CBInterface.h"

namespace StdHep {

typedef  HepMC::CBInterface< CBcm >  FIcm;

StdRunInfo * getRunInfoFromSTDCM( int irun )
{
    FIcm * cm = FIcm::instance();
    StdRunInfo * run = new StdRunInfo( irun, (*cm)->stdcm1()->nevtreq,
                                 (*cm)->stdcm1()->nevtgen,
                                 (*cm)->stdcm1()->nevtwrt,
                                 (double)(*cm)->stdcm1()->stdecom,
                                 (double)(*cm)->stdcm1()->stdxsec );
    run->appendSeed( (*cm)->stdcm1()->stdseed1 );
    run->appendSeed( (*cm)->stdcm1()->stdseed2 );
    std::string gname = (*cm)->stdcm2()->generatorname;
    std::string pname = (*cm)->stdcm2()->pdfname;
    run->setGeneratorName( gname );
    run->setPdfName( pname );
    return run;
}

bool RunInfoToSTDCM( StdRunInfo * run )
{
    FIcm * cm = FIcm::instance();
    (*cm)->stdcm1()->nevtreq = run->eventsToGenerate();
    (*cm)->stdcm1()->nevtgen = run->eventsGenerated();
    (*cm)->stdcm1()->nevtwrt = run->eventsWritten();
    (*cm)->stdcm1()->stdecom = (float)run->CoMEnergy();
    (*cm)->stdcm1()->stdxsec = (float)run->crossSection();
    if( run->size() > 0 ) (*cm)->stdcm1()->stdseed1 = run->seed(0);
    if( run->size() > 1 ) (*cm)->stdcm1()->stdseed2 = run->seed(1);
    if( run->runNumber() == 0 ) return false;
    return true;
}

} // StdHep

