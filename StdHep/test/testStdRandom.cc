//////////////////////////////////////////////////////////////////////////
// Lynn Garren
//
// This program tests StdHep::StdRandom
// 
//////////////////////////////////////////////////////////////////////////

#include <vector>
#include <iostream>
#include <sstream>
#include <string>

#include "CLHEP/StdHep/StdRandom.hh"

#include "SimpleRand.hh"

int main() { 

    int status=0;
    double d, saved;
    StdHep::StdRandom rstate;

    // fill and save an arbitrary vector just for grins
    std::vector<unsigned long> rs;
    for( int i=0; i<6; ++i) { rs.push_back(i*312); }
    rstate.putState( rs );
    rstate.print();
    
    // try using SimpleRand
    SimpleRand* simp = new SimpleRand(4124123);
    // throw 
    for( int i=0; i<12; ++i ) { 
	d = simp->flat(); 
	// get and then save the state 
        std::ostringstream ostr;
	simp->put(ostr);
	rstate.putState( ostr.str() );
    }
    // this double is generated by the last saved state
    d = simp->flat(); 
    saved = d;
    // throw some more
    for( int i=0; i<14; ++i ) { 
	d = simp->flat(); 
    }
    // make sure we have gone beyond the saved state
    if ( d == saved ) {
       std::cout << "still at the same state, something is wrong " << std::endl;
       status = 1;
    }
    // restore the saved state
    std::string state = rstate.getStateAsString();
    std::istringstream ist(state);
    simp->get(ist);
    d = simp->flat(); 
    if ( d == saved ) {
       std::cout << "generated the same number" << std::endl;
       status = 0;
    } else {
       std::cout << "saved double " << saved 
                 << " does not match generated double " << d << std::endl;
       status = 1;
    }
   
    
    return status;
}
