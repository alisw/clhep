# ======================================================================
# This is the CLHEP configuration input file
# Process this file with autoconf to produce a configure script.
# ======================================================================


# ----------------------------------------------------------------------
# Identify the package and initialize the autotools:
# ----------------------------------------------------------------------

AC_PREREQ(2.57)
AC_INIT(CLHEP, 1.9.0.1, CLHEP@cern.ch )
AC_CANONICAL_TARGET
AC_CONFIG_SRCDIR([Vector/src/AxisAngle.cc])
AM_INIT_AUTOMAKE(1.6 foreign)
AC_PROG_LIBTOOL

# ----------------------------------------------------------------------
# subpackages
# ----------------------------------------------------------------------

AC_CONFIG_SUBDIRS(Units Vector Evaluator GenericFunctions Geometry Random Matrix RandomObjects HepPDT HepMC StdHep RefCount Cast Exceptions)

# ----------------------------------------------------------------------
# --enable-exceptions or --disable-exceptions
# --disable-exceptions is the default
# ----------------------------------------------------------------------

AC_ARG_ENABLE(exceptions,
   AC_HELP_STRING([--enable-exceptions],[use CLHEP/Exceptions (off by default)]),
        [case "${enableval}" in
          yes) AC_SUBST(use_exceptions,["#define ENABLE_ZOOM_EXCEPTIONS"]) ;;
          no)  AC_SUBST(use_exceptions,["#undef  ENABLE_ZOOM_EXCEPTIONS"]) ;;
          *)   AC_SUBST(use_exceptions,["#define ENABLE_ZOOM_EXCEPTIONS"]) ;;
        esac],
        [AC_SUBST(use_exceptions,["#undef  ENABLE_ZOOM_EXCEPTIONS"])])

# ----------------------------------------------------------------------
# Identify the files that 'configure' is to produce:
# ----------------------------------------------------------------------

# Makefiles:
AC_CONFIG_FILES([Makefile])
# tarball scripts
AC_CONFIG_FILES([makeSourceDist], [chmod +x makeSourceDist])
AC_CONFIG_FILES([makeBinaryTar], [chmod +x makeBinaryTar])

# build clheplib
AC_CONFIG_FILES([build-clheplib], [chmod +x build-clheplib])

# ----------------------------------------------------------------------
# Check for needed programs:
# ----------------------------------------------------------------------

# Locate a C++ compiler:
AC_PROG_CXX(cl g++ c++ aCC CC cxx cc++ FCC KCC RCC xlC_r xlC gpp)

# Use it hereinafter:
AC_LANG(C++)

# Ensure we've found a preprocessor:
AC_REQUIRE_CPP

# worry about compiler flags
case "$target" in
*-*-win32*)
  case "$CXX" in
  cl)  CXXFLAGS="-DWIN32 -O -GX -GR -MD";;
  g++) CXXFLAGS="-O";;
  c++) CXXFLAGS="-O";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-cygwin*)
  case "$CXX" in
  cl)  CXXFLAGS="-DWIN32 -O -GX -GR -MD";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-solaris*)
  case "$CXX" in
  CC)  CXXFLAGS="-O -mt";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-linux*)
  case "$CXX" in
  g++) CXXFLAGS="-O -ansi -pedantic -Wall -D_GNU_SOURCE";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall -D_GNU_SOURCE";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
alpha*-dec-osf*)
  case "$CXX" in
  cxx) CXXFLAGS="-O -std strict_ansi -timplicit_local";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;;
*-*-hpux*)
  case "$CXX" in
  aCC) CXXFLAGS="-O -Aa +DAportable +Onolimit";;
  CC)  CXXFLAGS="+O3 +DAportable +a1 -z -pta +Onolimit";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
*-*-aix*)
  case "$CXX" in
  xlC) CXXFLAGS="-O3 -qtwolink -+";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
*-*-irix*)
  case "$CXX" in
  CC)  CXXFLAGS="-O -OPT:Olimit=0 -pta";;
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
powerpc-apple-darwin*)
  case "$CXX" in
  g++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  c++) CXXFLAGS="-O -ansi -pedantic -Wall";;
  *)   echo UNEXPECTED CHOICE OF C++ COMPILER: $CXX
  esac;; 
esac


# ----------------------------------------------------------------------
# Finish up:
# ----------------------------------------------------------------------

AC_OUTPUT


# ======================================================================
